"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./store.js":
/*!******************!*\
  !*** ./store.js ***!
  \******************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cartIsShownAtom\": function() { return /* binding */ cartIsShownAtom; },\n/* harmony export */   \"orderListAtom\": function() { return /* binding */ orderListAtom; }\n/* harmony export */ });\n/* harmony import */ var jotai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jotai */ \"./node_modules/jotai/esm/index.mjs\");\n\nconst orderListAtom = (0,jotai__WEBPACK_IMPORTED_MODULE_0__.atom)([]);\nconst cartIsShownAtom = (0,jotai__WEBPACK_IMPORTED_MODULE_0__.atom)(false);\n// show modal\nconst showCartHandler = ()=>{\n    setCartIsShown(true);\n};\n// remove modal\nconst hideCartHandler = ()=>{\n    setCartIsShown(false);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdG9yZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkI7QUFFdEIsTUFBTUMsZ0JBQWdCRCwyQ0FBSUEsQ0FBQyxFQUFFLEVBQUU7QUFDL0IsTUFBTUUsa0JBQWtCRiwyQ0FBSUEsQ0FBQyxLQUFLLEVBQUU7QUFFekMsYUFBYTtBQUNiLE1BQU1HLGtCQUFrQixJQUFNO0lBQzVCQyxlQUFlLElBQUk7QUFDckI7QUFDQSxlQUFlO0FBQ2YsTUFBTUMsa0JBQWtCLElBQU07SUFDNUJELGVBQWUsS0FBSztBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zdG9yZS5qcz80MGY1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGF0b20gfSBmcm9tIFwiam90YWlcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBvcmRlckxpc3RBdG9tID0gYXRvbShbXSk7XHJcbmV4cG9ydCBjb25zdCBjYXJ0SXNTaG93bkF0b20gPSBhdG9tKGZhbHNlKTtcclxuXHJcbiAgLy8gc2hvdyBtb2RhbFxyXG4gIGNvbnN0IHNob3dDYXJ0SGFuZGxlciA9ICgpID0+IHtcclxuICAgIHNldENhcnRJc1Nob3duKHRydWUpO1xyXG4gIH07XHJcbiAgLy8gcmVtb3ZlIG1vZGFsXHJcbiAgY29uc3QgaGlkZUNhcnRIYW5kbGVyID0gKCkgPT4ge1xyXG4gICAgc2V0Q2FydElzU2hvd24oZmFsc2UpO1xyXG4gIH07XHJcbiJdLCJuYW1lcyI6WyJhdG9tIiwib3JkZXJMaXN0QXRvbSIsImNhcnRJc1Nob3duQXRvbSIsInNob3dDYXJ0SGFuZGxlciIsInNldENhcnRJc1Nob3duIiwiaGlkZUNhcnRIYW5kbGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./store.js\n"));

/***/ })

});